/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Modulo_RecursosHumanos;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * En esta ventana se muestra a todas las Personas que no tienen un Empleo. Se puede seleccionar mostrar a personas que ya
 * se les acabó el tiempo de trabajo (para volver a contratarlos) o que nunca han trabajado (el caso de crear una Persona
 * pero no asignarle un puesto).
 * En cualquier caso, llava a la ventana encargada de Asiganr UN Empleo a UNA Persona.
 * @author Wilson Xicará
 */
public class AsignacionDeEmpleos extends javax.swing.JFrame {
    private Connection conexion;
    private JFrame ventanaPadre;
    private ArrayList<Integer> listaIDPersonas;
    private DefaultTableModel modelPersonas;
    private boolean buscarNuevos;
    /**
     * Creates new form NuevoEmpleo
     */
    public AsignacionDeEmpleos() {
        initComponents();
    }
    /**
     * 
     * @param conexion
     * @param ventanaPadre
     */
    public AsignacionDeEmpleos(Connection conexion, JFrame ventanaPadre) {
        initComponents();   // Al llamar esta ventana, siempre se va a mostrar
        this.conexion = conexion;
        this.ventanaPadre = ventanaPadre;
        listaIDPersonas = new ArrayList<>();
        modelPersonas = (DefaultTableModel)tabla_personas.getModel();
        this.setLocationRelativeTo(null);   // Para centrar esta ventana sobre la pantalla
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel11 = new javax.swing.JLabel();
        check_personas_ya_contratadas = new javax.swing.JRadioButton();
        check_personas_nuevas = new javax.swing.JRadioButton();
        buscar_registros = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla_personas = new javax.swing.JTable();
        asignar_empleo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Asignación de Empleos");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel11.setText("Mostrar por:");

        check_personas_ya_contratadas.setSelected(true);
        check_personas_ya_contratadas.setText("Personas que ya han trabajado aquí");
        check_personas_ya_contratadas.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                check_personas_ya_contratadasItemStateChanged(evt);
            }
        });

        check_personas_nuevas.setText("Personas que nunca han trabajao aquí");
        check_personas_nuevas.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                check_personas_nuevasItemStateChanged(evt);
            }
        });

        buscar_registros.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        buscar_registros.setText("Mostrar registros");
        buscar_registros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscar_registrosActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Personas sin puesto:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        tabla_personas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No.", "Nombre", "DPI", "Último puesto"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_personas.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tabla_personas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tabla_personasMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(tabla_personas);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 570, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE)
        );

        asignar_empleo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        asignar_empleo.setText("Asignar Puesto");
        asignar_empleo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                asignar_empleoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(223, 223, 223)
                                .addComponent(asignar_empleo))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(check_personas_nuevas)
                                    .addComponent(check_personas_ya_contratadas))
                                .addGap(18, 18, 18)
                                .addComponent(buscar_registros)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(check_personas_ya_contratadas)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(check_personas_nuevas))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(buscar_registros)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(asignar_empleo)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void check_personas_ya_contratadasItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_check_personas_ya_contratadasItemStateChanged
        check_personas_nuevas.setSelected(!check_personas_ya_contratadas.isSelected());
        buscar_registros.setEnabled(true);
    }//GEN-LAST:event_check_personas_ya_contratadasItemStateChanged

    private void check_personas_nuevasItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_check_personas_nuevasItemStateChanged
        check_personas_ya_contratadas.setSelected(!check_personas_nuevas.isSelected());
        buscar_registros.setEnabled(true);
    }//GEN-LAST:event_check_personas_nuevasItemStateChanged
    /**
     * Acción que permite mostrar todos los registros de las personas que nunca han trabajado en la empresa, o los que ya
     * han trabajado pero que ya se les venció el plazo (para poder volver a contratarlos). Todo depende de los JRadioButtom
     * @param evt 
     */
    private void buscar_registrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscar_registrosActionPerformed
        buscarNuevos = check_personas_nuevas.isSelected();
        String instruccion = "";
        if (buscarNuevos) { // Se crea la instrucción para mostrar a los que nunca han tenido un Empleo asignado
            instruccion = "SELECT Personal.Id idPersona, Personal.DPI, Personal.Nombre nombrePersona, Empleo.Id idEmpleo FROM Personal "
                    + "LEFT JOIN Empleo ON Personal.Id = Empleo.Personal_Id "
                    + "WHERE Empleo.Id IS NULL";
        } else {    // Se crea la instrucción para mostrar a los que ya han trabajado anteriormente
            instruccion = "SELECT Personal.Id idPersona, Personal.DPI, Personal.Nombre nombrePersona, Empleo.Id idEmpleo FROM Personal "
                    + "INNER JOIN Empleo ON Personal.Id = Empleo.Personal_Id "
                    + "WHERE Personal.Trabajando = 0 "
                    + "GROUP BY Personal.Id";
        }
        // Obtengo los datos desde la Base de Datos
        try {
            Statement sentencia = conexion.createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY);
            ResultSet cConsulta = sentencia.executeQuery(instruccion);
            int contador = 0;
            modelPersonas.setRowCount(0);
            while (cConsulta.next()) {
                listaIDPersonas.add(cConsulta.getInt("idPersona"));
                modelPersonas.addRow(new String[]{
                    ""+(++contador),
                    cConsulta.getString("nombrePersona"),
                    cConsulta.getString("DPI"),
                    buscarNuevos ? "Nuevo" : "Ya ha trabajado aquí"
                });
            }
            asignar_empleo.setEnabled(!listaIDPersonas.isEmpty());  // Si no hay Personas, no se puede asignar Empleos
            // Muestro el título del JPanel donde está la tabla, con información de la búsqueda
            jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Personas "+(buscarNuevos?"que nunca han trabajado aquí":"que ya se les venció el contrato")+": "+contador, javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12)));
            buscar_registros.setEnabled(false); // Este botón se mostrará hasta que se cambie los check
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error al intentar recuperar datos.\n\nDescripción:\n"+ex.getMessage(), "Error de conexión", JOptionPane.ERROR_MESSAGE);
//            Logger.getLogger(AsignacionDeEmpleos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buscar_registrosActionPerformed

    private void tabla_personasMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_personasMousePressed
        asignar_empleo.setEnabled(tabla_personas.getSelectedRow() != -1);
    }//GEN-LAST:event_tabla_personasMousePressed
    /**
     * Acción que permite asignar una Persona a un Empleo, siempre que este no tenga uno ya asignado o nunca ha tenido uno.
     * En cualquier caso (asignación de una o varias Personas), se hace la asignación siempre que no tenga uno, hay un
     * atributo en la tabla Personal de la BD que indica eso, y se actualiza dicho atributo (para que ya no se pueda hacer
     * otra asignación de empleo).
     * @param evt 
     */
    private void asignar_empleoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_asignar_empleoActionPerformed
        int[] rango = tabla_personas.getSelectedRows();
        if (rango.length == 1) {
            AsignarEmpleo nuevaAsignacion = new AsignarEmpleo(this, true, conexion, listaIDPersonas.get(rango[0]));
            nuevaAsignacion.setVisible(true);
            if (nuevaAsignacion.isPuestoAsignado()) {   // Si se realizó la Asignación
                // Elimino el registro de la Tabla
                int contFil = tabla_personas.getRowCount(), contCol = tabla_personas.getColumnCount(), fil, col;
                for(fil=rango[0]+1; fil<contFil; fil++)
                    for(col=1; col<contCol; col++)
                        tabla_personas.setValueAt((String)tabla_personas.getValueAt(fil, col), fil-1, col);
                modelPersonas.setRowCount(modelPersonas.getRowCount()-1);   // Elimino la última fila
            }
            // Hasta aquí se garantiza la Asignación (o no) de un Empleo a una Persona
        } else
            JOptionPane.showMessageDialog(this, "Seleccione un sólo registro a la vez", "Aviso", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_asignar_empleoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AsignacionDeEmpleos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AsignacionDeEmpleos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AsignacionDeEmpleos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AsignacionDeEmpleos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AsignacionDeEmpleos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton asignar_empleo;
    private javax.swing.JButton buscar_registros;
    private javax.swing.JRadioButton check_personas_nuevas;
    private javax.swing.JRadioButton check_personas_ya_contratadas;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tabla_personas;
    // End of variables declaration//GEN-END:variables
}
