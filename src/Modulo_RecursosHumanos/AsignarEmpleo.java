/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Modulo_RecursosHumanos;

import Excepciones.ExcepcionDatosIncorrectos;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author Wilson Xicará
 */
public class AsignarEmpleo extends javax.swing.JDialog {
    private Connection conexion;
    private boolean hacerVisible, puestoAsignado;
    private int idPersona;
    private ArrayList<Integer> listaIDPuestos, listaIDPersonas, listaIDPuestoAnterior;
    private ArrayList<String> listaDescripcionPuestos;
    private String nuevoPuesto, nuevoSueldo, nuevaFechaInicio, nuevaFechaFin;
    private Date fechaActual;
    /**
     * Creates new form CrearEmpleo
     */
    public AsignarEmpleo(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    public AsignarEmpleo(java.awt.Frame parent, boolean modal, Connection conexion, int idPersona) {
        super(parent, modal);
        initComponents();
        puestoAsignado = !(hacerVisible = true);    // Inicialmete se mostrará esta ventana y no se ha asignado algún puesto
        this.conexion = conexion;
        this.idPersona = idPersona;
        listaIDPuestos = new ArrayList<>();
        listaDescripcionPuestos = new ArrayList<>();
        
        // Obtengo los datos necesarios de los Puestos existentes en la Base de Datos
        try {
            Statement sentencia = conexion.createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY);
            ResultSet cConsulta;
            // Obtención del listado de Puestos
            cConsulta = sentencia.executeQuery("SELECT * FROM Puesto");
            while (cConsulta.next()) {
                listaIDPuestos.add(cConsulta.getInt("Id"));
                listaDescripcionPuestos.add(cConsulta.getString("Descripcion"));
                puestos.addItem(cConsulta.getString("Nombre_Puesto"));
            } puestos.setSelectedIndex(-1);
            if (listaIDPuestos.isEmpty()) {
                hacerVisible = false;
                JOptionPane.showMessageDialog(this, "Aún no se ha creado algún Puesto, por lo que no se puede asignar Empleo a las Personas.\nContacte al Administrador para más información y vuelva a intentarlo", "Datos faltantes", JOptionPane.WARNING_MESSAGE);
                return;
            }
            nuevoPuesto = nuevoSueldo = nuevaFechaInicio = nuevaFechaFin = "";
            // Obtengo la información básica de la Persona al que se le creará el Empleo
            cConsulta = sentencia.executeQuery("SELECT DPI, Nombre, Direccion FROM Personal WHERE Id = "+idPersona);
            if (cConsulta.next()) {
                persona_dpi.setText(cConsulta.getString("DPI"));
                persona_nombre.setText(cConsulta.getString("Nombre"));
                persona_direccion.setText(cConsulta.getString("Direccion"));
            }
            // Obtengo la fecha de hoy (desde la Base de Datos)
            cConsulta = sentencia.executeQuery("SELECT YEAR(NOW()), MONTH(NOW()), DAY(NOW())");
            cConsulta.next();
            fechaActual = new Date(cConsulta.getInt(1)-1900, cConsulta.getInt(2)-1, cConsulta.getInt(3));
            fecha_inicio_puesto.setDate(fechaActual);
            fecha_fin_puesto.setDate(fechaActual);
            cConsulta.close();
            // Otras configuraciones importantes
            fecha_inicio_puesto.getJCalendar().setWeekOfYearVisible(false);  // Para no mostrar el número de semana en el Calendario
            fecha_fin_puesto.getJCalendar().setWeekOfYearVisible(false);
            this.setLocationRelativeTo(null);   // Para centrar esta ventana sobre la pantalla.
        } catch (SQLException ex) {
            hacerVisible = false;
            JOptionPane.showMessageDialog(this, "No se puede obtener alguno de los listados desde la Base de Datos.\n\n"+ex.getMessage(), "Error al intentar obtener datos", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(AsignarEmpleo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        fecha_inicio_puesto = new com.toedter.calendar.JDateChooser();
        fecha_fin_puesto = new com.toedter.calendar.JDateChooser();
        jLabel12 = new javax.swing.JLabel();
        sueldo_base = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        asignar_empleo = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        persona_direccion = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        persona_dpi = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        persona_nombre = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        puestos = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        descripcion_puesto = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Fecha Inicio:");

        fecha_inicio_puesto.setDateFormatString("dd/MM/yyyy");
        fecha_inicio_puesto.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        fecha_fin_puesto.setDateFormatString("dd/MM/yyyy");
        fecha_fin_puesto.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel12.setText("Fecha Fin:");

        sueldo_base.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        sueldo_base.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                sueldo_baseKeyTyped(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel13.setText("Sueldo base:");

        asignar_empleo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        asignar_empleo.setText("Asignar Puesto");
        asignar_empleo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                asignar_empleoActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos de la Persona:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setText("Dirección:");

        persona_direccion.setEditable(false);
        persona_direccion.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel11.setText("DPI:");

        persona_dpi.setEditable(false);
        persona_dpi.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("Nombre:");

        persona_nombre.setEditable(false);
        persona_nombre.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(persona_direccion, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(persona_dpi, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(persona_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(persona_dpi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(persona_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(persona_direccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos del Puesto:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel10.setText("Puesto:");

        puestos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                puestosItemStateChanged(evt);
            }
        });

        descripcion_puesto.setEditable(false);
        descripcion_puesto.setColumns(20);
        descripcion_puesto.setRows(5);
        jScrollPane1.setViewportView(descripcion_puesto);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(puestos, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10)
                        .addComponent(puestos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sueldo_base, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fecha_inicio_puesto, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fecha_fin_puesto, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(213, 213, 213)
                        .addComponent(asignar_empleo)))
                .addGap(189, 189, 189))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(fecha_inicio_puesto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(fecha_fin_puesto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(sueldo_base, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(asignar_empleo)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sueldo_baseKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sueldo_baseKeyTyped
        if (!Pattern.compile("[.\\d]").matcher(String.valueOf(evt.getKeyChar())).matches())
        evt.consume();
    }//GEN-LAST:event_sueldo_baseKeyTyped
    /**
     * Acción que permite asignar una Persona a un Empleo, siempre que este no tenga uno ya asignado o nunca ha tenido uno.
     * En cualquier caso (asignación de una o varias Personas), se hace la asignación siempre que no tenga uno, hay un
     * atributo en la tabla Personal de la BD que indica eso, y se actualiza dicho atributo (para que ya no se pueda hacer
     * otra asignación de empleo).
     * @param evt 
     */
    private void asignar_empleoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_asignar_empleoActionPerformed
        try {
            validar_datos();    // Verificación de que los datos sean correctos
            Calendar fechaI = fecha_inicio_puesto.getCalendar(), fechaF = fecha_fin_puesto.getCalendar();
            // Creación del Registro de nuevo Empleo en la Base de Datos
            String instruccion = "INSERT INTO Empleo(Personal_Id, Puesto_Id, FechaInicio, FechaFin, SueldoBase) VALUES(";
            instruccion+= idPersona+", ";
            instruccion+= listaIDPuestos.get(puestos.getSelectedIndex())+", ";
            instruccion+= "'"+fechaI.get(Calendar.YEAR)+"-"+(fechaI.get(Calendar.MONTH)+1)+"-"+fechaI.get(Calendar.DAY_OF_MONTH)+"', ";
            instruccion+= "'"+fechaF.get(Calendar.YEAR)+"-"+(fechaF.get(Calendar.MONTH)+1)+"-"+fechaF.get(Calendar.DAY_OF_MONTH)+"', ";
            instruccion+= sueldo_base.getText()+")";
            conexion.prepareStatement(instruccion).executeUpdate();
            // Actualización del indicador en Personal de que ya tiene empleo
            conexion.prepareStatement("UPDATE Personal SET Trabajando = 1 WHERE Id = "+idPersona).executeUpdate();
            puestoAsignado = true;  // Indicador de que la Persona ya tiene Empleo
            nuevoPuesto = (String)puestos.getSelectedItem();
            nuevoSueldo = sueldo_base.getText();
            nuevaFechaInicio = ""+fechaI.get(Calendar.YEAR)+"-"+(fechaI.get(Calendar.MONTH)+1)+"-"+fechaI.get(Calendar.DAY_OF_MONTH);
            nuevaFechaFin = ""+fechaF.get(Calendar.YEAR)+"-"+(fechaF.get(Calendar.MONTH)+1)+"-"+fechaF.get(Calendar.DAY_OF_MONTH);
            JOptionPane.showMessageDialog(this, "Asiganción creada exitosamente", "Información", JOptionPane.INFORMATION_MESSAGE);

            this.dispose(); // Al Asignar el Empleo sin problemas, se cierra esta ventana
        } catch (ExcepcionDatosIncorrectos ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error en datos", JOptionPane.ERROR_MESSAGE);
//            Logger.getLogger(AsignarEmpleo.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error al intentar crear el nuevo Empleo.\n\nDescripción:\n"+ex.getMessage(), "Error de conexión", JOptionPane.ERROR_MESSAGE);
//            Logger.getLogger(AsignarEmpleo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_asignar_empleoActionPerformed

    private void puestosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_puestosItemStateChanged
        int index = puestos.getSelectedIndex();
        descripcion_puesto.setText((index==-1) ? "" : listaDescripcionPuestos.get(index));
    }//GEN-LAST:event_puestosItemStateChanged

     private void validar_datos() throws ExcepcionDatosIncorrectos {
        if (puestos.getSelectedIndex() == -1)
            throw new ExcepcionDatosIncorrectos("Seleccione el Puesto");
        if (fecha_inicio_puesto.getDate() == null)
            throw new ExcepcionDatosIncorrectos("Especifique la Fecha en la que Inicia a trabajar "+persona_nombre.getText());
        if (fecha_fin_puesto.getDate() == null)
            throw new ExcepcionDatosIncorrectos("Especifique la Fecha en la que Termina de trabajar "+persona_nombre.getText());
        
    }
    public boolean isHacerVisible() { return hacerVisible; }
    public boolean isPuestoAsignado() { return puestoAsignado; }
    public String getNuevoPuesto() { return nuevoPuesto; }
    public String getNuevoSueldo() { return nuevoSueldo; }
    public String getNuevaFechaInicio() { return nuevaFechaInicio; }
    public String getNuevaFechaFin() { return nuevaFechaFin; }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AsignarEmpleo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AsignarEmpleo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AsignarEmpleo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AsignarEmpleo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AsignarEmpleo dialog = new AsignarEmpleo(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton asignar_empleo;
    private javax.swing.JTextArea descripcion_puesto;
    private com.toedter.calendar.JDateChooser fecha_fin_puesto;
    private com.toedter.calendar.JDateChooser fecha_inicio_puesto;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField persona_direccion;
    private javax.swing.JTextField persona_dpi;
    private javax.swing.JTextField persona_nombre;
    private javax.swing.JComboBox<String> puestos;
    private javax.swing.JTextField sueldo_base;
    // End of variables declaration//GEN-END:variables
}
