/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Modulo_Crear;

import Excepciones.ExcepcionDatosIncorrectos;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * Ventana que permite crear una nueva Cosecha, con un Período de un año. Una Cosecha es un tiempo al que se puede relacionar
 * las actividades de producción y todo lo que haga la empresa.
 * @author Wilson Xicará
 */
public class CrearCosecha extends javax.swing.JDialog {
    private Connection conexion;
    private DefaultTableModel modelTabla;
    private boolean hacerVisible;
    /**
     * Creates new form CrearCosecha
     * @param parent
     * @param modal
     */
    public CrearCosecha(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     *
     * @param parent
     * @param modal
     * @param conexion
     */
    public CrearCosecha(java.awt.Frame parent, boolean modal, Connection conexion) {
        super(parent, modal);
        initComponents();
        this.conexion = conexion;
        hacerVisible = true;
        
        // Obtengo el listado de todas las Cosechas almacenadas en la Base de Datos
        try {
            Statement sentencia = conexion.createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY);
            ResultSet cCosechas = sentencia.executeQuery("SELECT Nombre, YEAR(Fecha_Inicio) Inicio, YEAR(Fecha_Fin) Fin FROM Cosecha");
            modelTabla = (DefaultTableModel)tabla_cosechas_existentes.getModel();
            while (cCosechas.next())
                modelTabla.addRow(new String[]{
                    ""+(tabla_cosechas_existentes.getRowCount()+1),
                    cCosechas.getString("Nombre"),
                    cCosechas.getString("Inicio")+"-"+cCosechas.getString("Fin")
                });
            cCosechas.close();
            this.setLocationRelativeTo(null);   // Para centrar esta ventana sobre la pantalla.
        } catch (SQLException ex) {
            hacerVisible = false;
            JOptionPane.showMessageDialog(this, "No se puede obtener el listado de Cosechas anteriores.\n\n"+ex.getMessage(), "Error al obtener datos", JOptionPane.ERROR_MESSAGE);
//            Logger.getLogger(CrearCosecha.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel_nueva_cosecha = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        nombre_cosecha = new javax.swing.JTextField();
        crear_cosecha = new javax.swing.JButton();
        salir = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        anio_inicio = new com.toedter.calendar.JYearChooser();
        anio_fin = new com.toedter.calendar.JYearChooser();
        panel_cosechas_existentes = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_cosechas_existentes = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Crear nueva cosecha");

        panel_nueva_cosecha.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos de la nueva cosecha:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Nombre de la Cosecha:");

        nombre_cosecha.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        crear_cosecha.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        crear_cosecha.setText("Crear Cosecha");
        crear_cosecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crear_cosechaActionPerformed(evt);
            }
        });

        salir.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        salir.setText("Salir");
        salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Período:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("-");

        anio_inicio.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        anio_inicio.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                anio_inicioPropertyChange(evt);
            }
        });

        anio_fin.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        javax.swing.GroupLayout panel_nueva_cosechaLayout = new javax.swing.GroupLayout(panel_nueva_cosecha);
        panel_nueva_cosecha.setLayout(panel_nueva_cosechaLayout);
        panel_nueva_cosechaLayout.setHorizontalGroup(
            panel_nueva_cosechaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_nueva_cosechaLayout.createSequentialGroup()
                .addGroup(panel_nueva_cosechaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panel_nueva_cosechaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(crear_cosecha)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(salir))
                    .addGroup(panel_nueva_cosechaLayout.createSequentialGroup()
                        .addGroup(panel_nueva_cosechaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel_nueva_cosechaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel_nueva_cosechaLayout.createSequentialGroup()
                                .addComponent(anio_inicio, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(anio_fin, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(nombre_cosecha, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panel_nueva_cosechaLayout.setVerticalGroup(
            panel_nueva_cosechaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_nueva_cosechaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_nueva_cosechaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nombre_cosecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_nueva_cosechaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(anio_fin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(anio_inicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(panel_nueva_cosechaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(crear_cosecha)
                    .addComponent(salir))
                .addContainerGap())
        );

        panel_cosechas_existentes.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cosechas existentes:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        tabla_cosechas_existentes.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tabla_cosechas_existentes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No.", "Nombre", "Período"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_cosechas_existentes.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tabla_cosechas_existentes.setRowHeight(25);
        jScrollPane1.setViewportView(tabla_cosechas_existentes);
        if (tabla_cosechas_existentes.getColumnModel().getColumnCount() > 0) {
            tabla_cosechas_existentes.getColumnModel().getColumn(0).setPreferredWidth(40);
            tabla_cosechas_existentes.getColumnModel().getColumn(1).setPreferredWidth(150);
            tabla_cosechas_existentes.getColumnModel().getColumn(2).setPreferredWidth(100);
        }

        javax.swing.GroupLayout panel_cosechas_existentesLayout = new javax.swing.GroupLayout(panel_cosechas_existentes);
        panel_cosechas_existentes.setLayout(panel_cosechas_existentesLayout);
        panel_cosechas_existentesLayout.setHorizontalGroup(
            panel_cosechas_existentesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        panel_cosechas_existentesLayout.setVerticalGroup(
            panel_cosechas_existentesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panel_cosechas_existentes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panel_nueva_cosecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel_nueva_cosecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel_cosechas_existentes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void crear_cosechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crear_cosechaActionPerformed
        // De una Cosecha se puede repetir el Nombre, más no el Período
        try {
            validar_datos();
            String nuevaCosecha = nombre_cosecha.getText(), nuevoPeriodo = ""+anio_inicio.getYear()+"-"+anio_fin.getYear();
            int cantidad = tabla_cosechas_existentes.getRowCount(), iterador;
            boolean yaExiste = false;
            for (iterador=0; iterador<cantidad; iterador++) {
                yaExiste = nuevoPeriodo.equals((String)tabla_cosechas_existentes.getValueAt(iterador, 2));
                if (yaExiste)
                    break;
            }   // Hasta aquí se garantiza la comparación de la Nueva Cosecha con los existentes
            if (yaExiste) {
                tabla_cosechas_existentes.setRowSelectionInterval(iterador, iterador);
                JOptionPane.showMessageDialog(this, "Ya existe una Cosecha en el Período "+nuevoPeriodo, "Datos repetidos", JOptionPane.ERROR_MESSAGE);
            } else {    // Se puede crear la nueva cosecha
                conexion.prepareStatement("INSERT INTO Cosecha(Nombre, Fecha_Inicio, Fecha_Fin) VALUES('"+nuevaCosecha+"', "+anio_inicio.getYear()+", "+anio_fin.getYear()+")").executeUpdate();
                JOptionPane.showMessageDialog(this, "Cosecha '"+nuevaCosecha+" "+nuevoPeriodo+"' creada exitosamente!", "Cosecha creada", JOptionPane.INFORMATION_MESSAGE);
                // Agrego la nueva cosecha a la Tabla para su visualización
                modelTabla.addRow(new String[]{
                    ""+(tabla_cosechas_existentes.getRowCount()+1),
                    nuevaCosecha,
                    nuevoPeriodo
                });
                nombre_cosecha.setText("");
            }
        } catch (ExcepcionDatosIncorrectos ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error en Datos", JOptionPane.ERROR_MESSAGE);
//            Logger.getLogger(CrearCosecha.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error de conexión con la Base de Datos.\nConsulte con el programador.\n\nDescripción:\n"+ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
//            Logger.getLogger(CrearCosecha.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_crear_cosechaActionPerformed

    private void salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirActionPerformed
        this.dispose();
    }//GEN-LAST:event_salirActionPerformed

    private void anio_inicioPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_anio_inicioPropertyChange
        anio_fin.setYear(anio_inicio.getYear() + 1);
    }//GEN-LAST:event_anio_inicioPropertyChange

    private void validar_datos() throws ExcepcionDatosIncorrectos {
        if (nombre_cosecha.getText().length() == 0)
            throw new ExcepcionDatosIncorrectos("Asigne un nombre a la Cosecha (como identificador)");
        if (anio_inicio.getYear() > anio_fin.getYear())
            throw new ExcepcionDatosIncorrectos("El Período de la Cosecha es incorrecto.\nPruebe asignar el Período '"+anio_inicio.getYear()+"-"+(anio_inicio.getYear()+1)+"'");
        if ((anio_inicio.getYear()+1) < anio_fin.getYear())
            throw new ExcepcionDatosIncorrectos("El Período de la Cosecha debe ser de 1 año.\nPruebe asignar el Período '"+anio_inicio.getYear()+"-"+(anio_inicio.getYear()+1)+"'");
    }
    public boolean getHacerVisible() { return hacerVisible; }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CrearCosecha.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CrearCosecha dialog = new CrearCosecha(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JYearChooser anio_fin;
    private com.toedter.calendar.JYearChooser anio_inicio;
    private javax.swing.JButton crear_cosecha;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nombre_cosecha;
    private javax.swing.JPanel panel_cosechas_existentes;
    private javax.swing.JPanel panel_nueva_cosecha;
    private javax.swing.JButton salir;
    private javax.swing.JTable tabla_cosechas_existentes;
    // End of variables declaration//GEN-END:variables
}
