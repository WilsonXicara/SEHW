/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Modulo_Ventas;

import Modulo_Principal.Principal;
import java.awt.event.ItemEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author USUARIO
 */
public class Factura_Local extends javax.swing.JFrame {
    Connection base;
    Principal padre;
    ArrayList<String> Id_cafe;
    ArrayList<String> agregados;
    int posicion_cafe;
    int pos_eliminar;
    /**
     * Creates new form Factura_Local
     */
    public Factura_Local() {
        initComponents();
    }
    
    /**
     * Creates new form Factura_Local
     * @param base
     */
    public Factura_Local(Connection base,Principal padre) {
        try {
            initComponents();
            this.base = base;
            this.padre = padre;
            posicion_cafe = -1;
            pos_eliminar = -1;
            Id_cafe = new ArrayList<>();
            agregados = new ArrayList<>();
            Statement b = base.createStatement();
            ResultSet consultab = b.executeQuery("SELECT cafe.Id,cafe.Nombre FROM cafe WHERE cafe.Oro = 1 AND cafe.Id != 1;");
            while(consultab.next()){
                String Id = consultab.getString(1);
                String nombre = consultab.getString(2);
                Id_cafe.add(Id);
                Tx_cafe.addItem(nombre);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Factura_Local.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Tx_nit = new javax.swing.JTextField();
        Tx_nombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        Tx_direccion = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        Tx_cafe = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        Tx_cantidad = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        Tx_precio = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        Productos = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        Tx_total = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        Tx_numero = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        Tx_serie = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Nombre: ");

        jLabel2.setText("NIT: ");

        Tx_nit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Tx_nitActionPerformed(evt);
            }
        });

        jLabel3.setText("DirecciÃ³n: ");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Detalle Factura"));

        jLabel4.setText("Producto: ");

        Tx_cafe.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                Tx_cafeItemStateChanged(evt);
            }
        });

        jLabel5.setText("Cantidad: ");

        jLabel6.setText("Precio: ");

        Productos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Precio", "Cantidad", "Sub_Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Productos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ProductosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Productos);
        if (Productos.getColumnModel().getColumnCount() > 0) {
            Productos.getColumnModel().getColumn(0).setResizable(false);
            Productos.getColumnModel().getColumn(0).setPreferredWidth(300);
            Productos.getColumnModel().getColumn(1).setResizable(false);
            Productos.getColumnModel().getColumn(1).setPreferredWidth(100);
            Productos.getColumnModel().getColumn(2).setResizable(false);
            Productos.getColumnModel().getColumn(2).setPreferredWidth(100);
            Productos.getColumnModel().getColumn(3).setResizable(false);
            Productos.getColumnModel().getColumn(3).setPreferredWidth(150);
        }

        jButton1.setText("Agregar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Eliminar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel7.setText("Total: ");

        Tx_total.setText("0.00");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 539, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Tx_cafe, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Tx_cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Tx_precio))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(135, 135, 135)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)
                        .addGap(103, 103, 103)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Tx_total)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(Tx_cafe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(Tx_cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(Tx_precio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1)
                        .addComponent(jButton2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(Tx_total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );

        jButton3.setText("Crear");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Buscar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel8.setText("Numero: ");

        jLabel9.setText("Serie: ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Tx_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Tx_direccion, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(219, 219, 219)
                                .addComponent(jButton3))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Tx_nit, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton4)
                                .addGap(27, 27, 27)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Tx_numero, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Tx_serie, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(Tx_nit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4)
                    .addComponent(jLabel8)
                    .addComponent(Tx_numero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(Tx_serie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(Tx_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(Tx_direccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Tx_nitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Tx_nitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Tx_nitActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        String Nit = Tx_nit.getText().trim();
        if(Nit.length()>0){
            try {
                Statement b = base.createStatement();
                ResultSet consultab = b.executeQuery("SELECT clientes.Nombre,clientes.Direccion FROM clientes WHERE clientes.NIT = '"+Nit+"';");
                if(consultab.next()){
                    String Nombre = consultab.getString(1);
                    String Direccion = consultab.getString(2);
                    Tx_nombre.setText(Nombre);
                    Tx_direccion.setText(Direccion);
                }else{
                    JOptionPane.showMessageDialog(this, "No existe un registro con el NIT indicado", "ERROR", JOptionPane.ERROR_MESSAGE, null);
                }
            } catch (SQLException ex) {
                Logger.getLogger(Factura_Local.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void Tx_cafeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_Tx_cafeItemStateChanged
        if(evt.getStateChange() == ItemEvent.SELECTED){
            posicion_cafe = Tx_cafe.getSelectedIndex();
        }
    }//GEN-LAST:event_Tx_cafeItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String Precio = Tx_precio.getText().trim();
        String Cantidad = Tx_cantidad.getText().trim();
        if(Precio.length()>0 && Cantidad.length()>0){
            DefaultTableModel tabla = (DefaultTableModel)Productos.getModel();
            String[] agregar = new String[4];
            agregar[0] = (String)Tx_cafe.getSelectedItem();
            agregar[1] = Precio;
            agregar[2] = Cantidad;
            float sub_total = Float.parseFloat(Precio) * Float.parseFloat(Cantidad);
            agregar[3] = String.format("%.2f", sub_total);
            tabla.addRow(agregar);
            float total = Float.parseFloat(Tx_total.getText())+sub_total;
            Tx_total.setText(String.format("%.2f", total));
            Tx_precio.setText("");
            Tx_cantidad.setText("");
            
            agregados.add(Id_cafe.get(posicion_cafe));
            
        }else{
            JOptionPane.showMessageDialog(this, "El precio y cantidad es necesario", "ERROR", JOptionPane.ERROR_MESSAGE, null);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void ProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProductosMouseClicked
        pos_eliminar = Productos.getSelectedRow();
    }//GEN-LAST:event_ProductosMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if(pos_eliminar != -1){
            DefaultTableModel tabla = (DefaultTableModel) Productos.getModel();
            float sub_total = Float.parseFloat((String)tabla.getValueAt(pos_eliminar, 3));
            float total = Float.parseFloat(Tx_total.getText())-sub_total;
            Tx_total.setText(String.format("%.2f", total));
            agregados.remove(pos_eliminar);
            tabla.removeRow(pos_eliminar);
            pos_eliminar = -1;
        }else{
            JOptionPane.showMessageDialog(this, "Debe seleccionar un registro", "ERROR", JOptionPane.ERROR_MESSAGE, null);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String Nit = Tx_nit.getText().trim();
        String Nombre = Tx_nombre.getText().trim();
        String Direccion = Tx_direccion.getText().trim();
        String numero = Tx_numero.getText().trim();
        String serie = Tx_serie.getText().trim();
        if(Nit.length()>0 && Nombre.length()>0 && Direccion.length()>0 && numero.length()>0 && serie.length()>0){
            if(agregados.size()>0){
                try {
                    Statement u = base.createStatement();
                    ResultSet consultau = u.executeQuery("SELECT factura.Id FROM factura WHERE factura.Numero ="+numero+" AND factura.Serie = '"+serie+"';");
                    if(!consultau.next()){
                    Statement b = base.createStatement();
                    ResultSet consultab = b.executeQuery("SELECT clientes.Id FROM clientes WHERE clientes.NIT = '"+Nit+"' AND clientes.Nombre = '"+Nombre+"'AND clientes.Direccion = '"+Direccion+"';");
                    if(consultab.next()){
                        String cliente = consultab.getString(1);
                        String instruccion = "INSERT INTO factura(factura.Total,factura.Clientes_Id,factura.Fecha,factura.Numero,factura.Serie) VALUES(0,"+cliente+",NOW(),"+numero+",'"+serie+"');";
                        PreparedStatement a = base.prepareStatement(instruccion);
                        a.executeUpdate();
                        
                        b= base.createStatement();
                        consultab = b.executeQuery("SELECT MAX(factura.Id) FROM factura;");
                        consultab.next();
                        String factura_id = consultab.getString(1);
                        DefaultTableModel tabla = (DefaultTableModel) Productos.getModel();
                        for (int i = 0; i < agregados.size(); i++) {
                            String precio = (String)tabla.getValueAt(i, 1);
                            String cantidad = (String) tabla.getValueAt(i, 2);
                            instruccion = "INSERT INTO detalle_factura(detalle_factura.Cafe_Id,detalle_factura.Factura_Id,detalle_factura.Cantidad,detalle_factura.Precio) VALUES("+agregados.get(i)+","+factura_id+","+cantidad+","+precio+");";
                            PreparedStatement c = base.prepareStatement(instruccion);
                            c.executeUpdate();
                        }
                        tabla.setRowCount(0);
                        agregados = new ArrayList<>(); 
                    }else{
                        String instruccio = "INSERT INTO clientes(NIT,Nombre,Direccion) VALUES('"+Nit+"','"+Nombre+"','"+Direccion+"');";
                        PreparedStatement e = base.prepareStatement(instruccio);
                        e.executeUpdate();
                        
                        b = base.createStatement();
                        consultab = b.executeQuery("SELECT clientes.Id FROM clientes WHERE clientes.NIT = '"+Nit+"' AND clientes.Nombre = '"+Nombre+"'AND clientes.Direccion = '"+Direccion+"';");
                        consultab.next();
                        String cliente = consultab.getString(1);
                        String instruccion = "INSERT INTO factura(factura.Total,factura.Clientes_Id,factura.Fecha,factura.Numero,factura.Serie) VALUES(0,"+cliente+",NOW(),"+numero+",'"+serie+"');";
                        PreparedStatement a = base.prepareStatement(instruccion);
                        a.executeUpdate();
                        
                        b= base.createStatement();
                        consultab = b.executeQuery("SELECT MAX(factura.Id) FROM factura;");
                        consultab.next();
                        String factura_id = consultab.getString(1);
                        DefaultTableModel tabla = (DefaultTableModel) Productos.getModel();
                        for (int i = 0; i < agregados.size(); i++) {
                            String precio = (String)tabla.getValueAt(i, 1);
                            String cantidad = (String) tabla.getValueAt(i, 2);
                            instruccion = "INSERT INTO detalle_factura(detalle_factura.Cafe_Id,detalle_factura.Factura_Id,detalle_factura.Cantidad,detalle_factura.Precio) VALUES("+agregados.get(i)+","+factura_id+","+cantidad+","+precio+");";
                            PreparedStatement c = base.prepareStatement(instruccion);
                            c.executeUpdate();
                        }
                        tabla.setRowCount(0);
                        agregados = new ArrayList<>();
                    }
                    Tx_nit.setText("");
                    Tx_nombre.setText("");
                    Tx_direccion.setText("");
                    Tx_precio.setText("");
                    Tx_cantidad.setText("");
                    Tx_total.setText("0.00");
                    }
                    else{
                        JOptionPane.showMessageDialog(this, "Ya existe una factura con el mismo numero y serie", "ERROR", JOptionPane.ERROR_MESSAGE, null); 
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(Factura_Local.class.getName()).log(Level.SEVERE, null, ex);
                }
            }else{
                JOptionPane.showMessageDialog(this, "Debe agregar productos", "ERROR", JOptionPane.ERROR_MESSAGE, null);
            }
        }else{
           JOptionPane.showMessageDialog(this, "Debe llenar todos los campos", "ERROR", JOptionPane.ERROR_MESSAGE, null); 
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Factura_Local.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Factura_Local.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Factura_Local.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Factura_Local.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Factura_Local().setVisible(true);
            }
        });
    }
    
    public void Crear_detalles(int Id_cliente,int Id_factura){
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Productos;
    private javax.swing.JComboBox<String> Tx_cafe;
    private javax.swing.JTextField Tx_cantidad;
    private javax.swing.JTextField Tx_direccion;
    private javax.swing.JTextField Tx_nit;
    private javax.swing.JTextField Tx_nombre;
    private javax.swing.JTextField Tx_numero;
    private javax.swing.JTextField Tx_precio;
    private javax.swing.JTextField Tx_serie;
    private javax.swing.JTextField Tx_total;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
