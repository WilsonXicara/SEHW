/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Modulo_Ventas;

import Modulo_Principal.Principal;
import java.awt.Frame;
import java.awt.event.ItemEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author USUARIO
 */
public class Factura_Exportacion extends javax.swing.JFrame {
    Connection base;
    Principal padre;
    ArrayList<String> Id_Cliente;
    ArrayList<String> Id_cafe;
    int posicion_cliente;
    int posicion_cafe;
    /**
     * Creates new form Factura_Exportación
     */
    public Factura_Exportacion() {
        initComponents();
    }

    /**
     * Creates new form Factura_Exportación
     */
    public Factura_Exportacion(Connection base,Principal padre) throws SQLException {
        initComponents();
        this.base = base;
        this.padre = padre;
        actualizar();
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        Tx_nombre = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Tx_serie = new javax.swing.JTextField();
        Tx_numero = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        Tx_dirección = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        Tx_cafe = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        Tx_precio = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        Tx_quintales = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jButton1.setText("Crear Cliente");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        Tx_nombre.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                Tx_nombreItemStateChanged(evt);
            }
        });

        jLabel1.setText("Nombre");

        jLabel2.setText("Serie: ");

        jLabel3.setText("Numero: ");

        jLabel4.setText("Dirección");

        Tx_dirección.setEditable(false);

        jLabel5.setText("Café: ");

        Tx_cafe.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                Tx_cafeItemStateChanged(evt);
            }
        });

        jLabel6.setText("Precio por quintal: ");

        jLabel7.setText("Quintales: ");

        jButton2.setText("Crear");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Regresar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(27, 27, 27))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(Tx_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(99, 99, 99)
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(Tx_serie, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(31, 31, 31)
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(Tx_numero, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(Tx_dirección))
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(Tx_precio, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel7)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(Tx_quintales))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(Tx_cafe, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(149, 149, 149)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(Tx_serie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Tx_numero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Tx_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(Tx_dirección, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(Tx_cafe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(Tx_precio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(Tx_quintales, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addGap(27, 27, 27))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Tx_nombreItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_Tx_nombreItemStateChanged
        if(evt.getStateChange() == ItemEvent.SELECTED){
            try {
                posicion_cliente = Tx_nombre.getSelectedIndex();
                Statement b = base.createStatement();
                ResultSet consultab = b.executeQuery("SELECT clientes_exportacion.Direccion FROM clientes_exportacion WHERE clientes_exportacion.Id = "+Id_Cliente.get(posicion_cliente)+";");
                consultab.next();
                Tx_dirección.setText(consultab.getString(1));
            } catch (SQLException ex) {
                Logger.getLogger(Factura_Exportacion.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_Tx_nombreItemStateChanged

    private void Tx_cafeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_Tx_cafeItemStateChanged
        if(evt.getStateChange() == ItemEvent.SELECTED){
            posicion_cafe = Tx_cafe.getSelectedIndex();
        }
    }//GEN-LAST:event_Tx_cafeItemStateChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if(posicion_cafe > -1 && posicion_cliente > -1){
            String Serie = Tx_serie.getText().trim();
            String Numero = Tx_numero.getText().trim();
            if(Serie.length()>0 && Numero.length()>0){
                String Precio = Tx_precio.getText().trim();
                String Cantidad = Tx_quintales.getText().trim();
                if(Precio.length()>0 && Cantidad.length()>0){
                    try {
                        Statement b = base.createStatement();
                        ResultSet consultab = b.executeQuery("SELECT factura_exportacion.Id FROM factura_exportacion WHERE factura_exportacion.Serie = '"+Serie+"' AND factura_exportacion.Numero = '"+Numero+"';");
                        if(!consultab.next()){
                            String Instruccion = "INSERT INTO factura_exportacion(Serie,Numero,Precio,Cantidad,Fecha,Clientes_exportacion_Id,Cafe_Id) VALUES('"+Serie+"','"+Numero+"',"+Precio+","+Cantidad+",NOW(),"+Id_Cliente.get(posicion_cliente)+","+Id_cafe.get(posicion_cafe)+");";
                            PreparedStatement a = base.prepareStatement(Instruccion);
                            ResultSet cConsulta;
                            a.executeUpdate();
                            Tx_serie.setText("");
                            Tx_numero.setText("");
                            Tx_precio.setText("");
                            Tx_quintales.setText("");
                            
                            // CREACIÓN DE LA PARTIDA ASOCIADA A LA FACTURA DE EXPORTACIÓN CREADA
                            String instruccion;
                            int idCicloContable, idPartida, numeroPartida;
                            // Obtención del ID del Ciclo Contable de la Fecha actual
                            cConsulta = a.executeQuery("SELECT CicloContable.Id FROM CicloContable "
                                    + "INNER JOIN Anio ON CicloContable.Anio_Id = Anio.Id "
                                    + "INNER JOIN Mes ON CicloContable.Mes_Id = Mes.Id "
                                    + "WHERE Anio.Anio = YEAR(NOW()) AND Mes.Id = MONTH(NOW())");
                            cConsulta.next();
                            idCicloContable = cConsulta.getInt(1);
                            // Obtención del Número de Partida que tendrá la nueva partida asociada a la Factura Especial
                            cConsulta = a.executeQuery("SELECT COUNT(Numero), MAX(Numero) FROM Partida WHERE CicloContable_Id = "+idCicloContable);
                            cConsulta.next();
                            numeroPartida = (cConsulta.getInt(1)==0) ? 1 : cConsulta.getInt(2)+1;
                            // Creación del Registro de la Partida asociada a la Factura Especial creada
                            instruccion = "INSERT INTO Partida(CicloContable_Id, Numero, Fecha, Descripción) VALUES(";
                            instruccion+= idCicloContable+", "+numeroPartida+", NOW(), ";
                            instruccion+= "'Extensión de la Factura de Exportación No. "+Tx_numero.getText()+", con fecha de hoy')";
                            base.prepareStatement(instruccion).executeUpdate();  // Creación del Registro de la Partida
                            // Obtención del ID de la Partida recién creada
                            cConsulta = a.executeQuery("SELECT LAST_INSERT_ID()");    // Obtiene el ID del último registro 'insertado'
                            cConsulta.next();
                            idPartida = cConsulta.getInt(1);
                            
                            // Obtención del ID de las Cuentas implicadas en la Partida
                            int idClientes, idVentas, idIVAPorPagar;
                            cConsulta = a.executeQuery("SELECT Id FROM Cuentas WHERE Nombre = 'Clientes'");
                            cConsulta.next();
                            idClientes = cConsulta.getInt(1);   // Obtención del ID de la Cuenta 'Clientes'
                            cConsulta = a.executeQuery("SELECT Id FROM Cuentas WHERE Nombre = 'Ventas'");
                            cConsulta.next();
                            idVentas = cConsulta.getInt(1);   // Obtención del ID de la Cuenta 'Ventas'
                            cConsulta = a.executeQuery("SELECT Id FROM Cuentas WHERE Nombre = 'IVA por Pagar'");
                            cConsulta.next();
                            idIVAPorPagar = cConsulta.getInt(1);   // Obtención del ID de la Cuenta 'IVA por Pagar'
                            
                            // Creación de los Detalles de la Partida asociada a la Factura de Exportación creada
                            float clientes, ventas, IVAPorPagar, totalFactura;
                            clientes = totalFactura = Float.parseFloat(Tx_precio.getText()) + Float.parseFloat(Tx_quintales.getText());
                            IVAPorPagar = (totalFactura/1.12f)*0.12f;
                            ventas = totalFactura - IVAPorPagar;
                            // Creación de los Detalles de la Partida
                            instruccion = "INSERT INTO Detalle_Partida(Partida_Id, Cuentas_Id, Valor, Debe) VALUES("+idPartida+", "+idClientes+", "+String.format("%.2f", clientes)+", 1)";
                            base.prepareStatement(instruccion).executeUpdate(); // Cuenta Clientes
                            instruccion = "INSERT INTO Detalle_Partida(Partida_Id, Cuentas_Id, Valor, Debe) VALUES("+idPartida+", "+idVentas+", "+String.format("%.2f", ventas)+", 0)";
                            base.prepareStatement(instruccion).executeUpdate(); // Cuenta Ventas
                            instruccion = "INSERT INTO Detalle_Partida(Partida_Id, Cuentas_Id, Valor, Debe) VALUES("+idPartida+", "+idIVAPorPagar+", "+String.format("%.2f", IVAPorPagar)+", 0)";
                            base.prepareStatement(instruccion).executeUpdate(); // Cuenta IVA por Pagar
                            // HASTA AQUÍ SE GARANTIZA LA CREACIÓN DE LA PARTIDA PARA LA FACTURA DE EXPORTACIÓN REALIZADA
                        }else{
                            JOptionPane.showMessageDialog(this, "Ya existe una factura con este numero de serie \n y numero de factura", "ERROR", JOptionPane.ERROR_MESSAGE, null);
                        }
                    } catch (SQLException ex) {
                        Logger.getLogger(Factura_Exportacion.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }else{
                    JOptionPane.showMessageDialog(this, "El precio y la cantidad de café es necesario", "ERROR", JOptionPane.ERROR_MESSAGE, null);
                }
            }else{
                JOptionPane.showMessageDialog(this, "Los campos Serie y Numero son necesarios", "ERROR", JOptionPane.ERROR_MESSAGE, null);
            }
        }else{
            JOptionPane.showMessageDialog(this, "Aun no se ha creado un cliente", "ERROR", JOptionPane.ERROR_MESSAGE, null);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Crear_cliente a = new Crear_cliente(new Frame(), true, base);
        a.setVisible(true);
        actualizar();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Factura_Exportacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Factura_Exportacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Factura_Exportacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Factura_Exportacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Factura_Exportacion().setVisible(true);
            }
        });
    }
    
    public void actualizar(){
        try {
            Id_Cliente = new ArrayList<>();
            Id_cafe = new ArrayList<>();
            posicion_cliente = -1;
            posicion_cafe = -1;
            Statement b = base.createStatement();
            ResultSet consultab = b.executeQuery("SELECT * From clientes_exportacion");
            while(consultab.next()){
                String Id = consultab.getString(1);
                String nombre = consultab.getString(2);
                Id_Cliente.add(Id);
                Tx_nombre.addItem(nombre);
            }
            
            b = base.createStatement();
            consultab = b.executeQuery("SELECT cafe.Id,cafe.Nombre FROM cafe WHERE cafe.Oro = 1 AND cafe.Pergamino = 0;");
            while(consultab.next()){
                String Id = consultab.getString(1);
                String Nombre = consultab.getString(2);
                Id_cafe.add(Id);
                Tx_cafe.addItem(Nombre);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Factura_Exportacion.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Tx_cafe;
    private javax.swing.JTextField Tx_dirección;
    private javax.swing.JComboBox<String> Tx_nombre;
    private javax.swing.JTextField Tx_numero;
    private javax.swing.JTextField Tx_precio;
    private javax.swing.JTextField Tx_quintales;
    private javax.swing.JTextField Tx_serie;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    // End of variables declaration//GEN-END:variables
}
